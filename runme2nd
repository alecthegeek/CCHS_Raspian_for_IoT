#!/usr/bin/env bash
# Copyright (c) 2013 All Right Reserved  Alec Clews
#
# author: Alec Clews
# alecclews@gmail.com
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#
#    Special thanks to @mikered for wifi set up code



# Add Check to encourage users to keep system up to date


echo 'APT::Update::Post-Invoke-Success {"touch /var/lib/apt/periodic/update-success-stamp 2>/dev/null || true";};' | \
				sudo tee -a /etc/apt/apt.conf.d/15update-stamp > /dev/null

# Set initial check to every 7 days

echo '# Check apt-get is run every few days' |sudo tee /etc/profile.d/checkUpgrade.sh
echo 'no_of_days=7' |sudo tee -a /etc/profile.d/checkUpgrade.sh
echo 'no_of_seconds=$(($no_of_days*24*60*60))' |sudo tee -a /etc/profile.d/checkUpgrade.sh
echo 'if [[  ! -e /var/lib/apt/periodic/update-success-stamp ]] ||\' |sudo tee -a /etc/profile.d/checkUpgrade.sh
echo '	 (( ( $(date +%s) - $(stat -c %Y /var/lib/apt/periodic/update-success-stamp) ) > $no_of_seconds )) ; then' |\
            sudo tee -a /etc/profile.d/checkUpgrade.sh > /dev/null
echo '  echo It has been at least $no_of_days days since the last update' |sudo tee -a /etc/profile.d/checkUpgrade.sh > /dev/null
echo '  echo Please run \"sudo apt-get update \&\& sudo apt-get -y upgrade\"' |\
                 sudo tee -a /etc/profile.d/checkUpgrade.sh > /dev/null
echo fi | sudo tee -a /etc/profile.d/checkUpgrade.sh > /dev/null


echo
echo About to fully upgrade all relevant packages and optionally install others
echo This will take some time
echo

# In case the upgrade does nothing create the masrker file

sudo touch /var/lib/apt/periodic/update-success-stamp

# Make sure system is fully up to date
sudo apt-get -y dist-upgrade

ask() {
  read -p "$@" -r < /dev/tty
  echo $REPLY
}

# Install and enable i2c and SPI
sudo apt-get -y install i2c-tools lm-sensors python-smbus
sudo sed /etc/modprobe.d/raspi-blacklist.conf \
  -i -e 's/^#blacklist spi-bcm2708/blacklist spi-bcm2708/' \
  -e 's/^#blacklist i2c-bcm2708/blacklist i2c-bcm2708/'

sudo adduser $USER i2c

echo Installed support for I2C serial interface and LM sensors
echo added $USER to the i2c group
echo

echo 'We will now install a few useful development tools (editors, source code control etc.)'
sudo apt-get -y install vim git git-gui git-doc git-svn subversion screen tmux ack-grep emacs locate python-setuptools
sudo easy_install pip
sudo pip install virtualenv virtualenvwrapper  

echo

echo We can do put some host setttings in the /boot/machine.local and you can edit them on your laptop as needed

if [[ $(ask "Do you wish to configure the /boot/machine.local file?[y/N] ") =~ ^[Yy]$ ]]
then

  if [[ $(ask 'Do you wish to use an initial hostname of a) '$(hostname)' or a b) CPU serial number  based hostname?[A/b] ') =~ ^[Aa]$ ]]
  then
    newhostname=$(hostname)
  else
    newhostname=$'rpi$(sed -nEe \'/^Serial\t\t: ........(........)$/s//\\1/p\' /proc/cpuinfo)'
  fi

  cat <<EOF | sudo tee /boot/machine.local
# Edit this file and reboot the Pi.
# NB Insert the SD card into a workstation and you can edit the file as well

newhostname=$newhostname  # Host for /etc/host
#newhostname=<my alternative hostname>  # Host for /etc/host use instead if wanted
#wifihostname=wfipi   # Hostname for wifi interface
#wifiSSID=wifipi-ap
#wifipsk=secretpsk
#wifi_ap_network=16 #  01-254
#interface=wlan0
#channel=6
#driver=hostpad
#
EOF

  cat <<'EOF' | sudo tee /usr/local/sbin/config-hostname
#!/bin/sh

if [ -f /boot/machine.local ] ; then
  . /boot/machine.local # dash does not support `source` keyword
  oldhostname=$(hostname)
  if [ -n "$newhostname" -a "$newhostname" != "$oldhostname" ] ; then
    sudo hostname $newhostname
    echo $newhostname | sudo tee /etc/hostname > /dev/null
    sudo sed -ie 's/^\(..*\)'$oldhostname'\(.*\)$/\1'$newhostname'\2/' /etc/hosts
    sudo invoke-rc.d hostname.sh start
    sudo invoke-rc.d networking force-reload
    sudo invoke-rc.d avahi-daemon force-reload
    sudo /etc/init.d/ssh restart
    logger "Changed hostname to $(hostname) on $interface"
    logger "About to reboot"
    sudo init 6
  fi
  #todo Add wifihostname to interface

fi

EOF

sudo chmod +x /usr/local/sbin/config-hostname

sudo sed -ie '/exit 0/i\
[ -x /usr/local/sbin/config-hostname ] && /usr/local/sbin/config-hostname

' /etc/rc.local

fi

echo "The Baracuda Copy Cloud storage service works nativly on the Pi."
if [[ $(ask "Do you wish to install and configure the Copy client? (http://copy.com/)[y/N] ") =~ ^[Yy]$ ]]
then
 bash <(wget --no-check-certificate -O - https://copy.com/YJYNOLByOoYpmgRy)
fi
echo 

if [[ $(ask "Do you wish to install support for the Freetronics Pileven board?[y/N] ") =~ ^[Yy]$ ]]
then
  wget -O - https://github.com/freetronics/PiLeven-tools/releases/download/v1.0/install_pileven.sh | sudo bash
fi

echo 
  
if [[ $(ask "Do you wish to install the Wiring Pi library? (http://wiringpi.com/)[y/N] ") =~ ^[Yy]$ ]]
then

  # Install the WiringPi

  WP=/usr/src/wiringPi

  sudo mkdir -p $WP
  sudo chown $USER:$(id -g -n $USER) $WP

  pushd $WP

  git clone git://git.drogon.net/wiringPi .
  ./build

  cat <<EOF |sudo tee /usr/local/bin/updateWiringPi
#!/usr/bin/env sh
# Keep wiringPi updated

cd $WP
git pull origin &&
./build &&
echo WiringPi updated ||
echo WiringPi update failed
EOF

  sudo chmod + /usr/local/bin/updateWiringPi

  echo "To update the wiringPi library run the script /usr/local/bin/updateWiringPi as needed"
  echo

  popd
else
  echo
fi

if [[ $(ask "Do you wish to install the Robot OS? (http://ros.org)[y/N] ") =~ ^[Yy]$ ]]
then
  # Add repo for Robot operating System
  echo "deb http://packages.ros.org/ros/ubuntu wheezy main" | sudo tee /etc/apt/sources.list.d/ros-latest.list
  wget https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -O - | sudo apt-key add -
  sudo apt-get update
  
  # from http://wiki.ros.org/ROSberryPi/Installing%20ROS%20Indigo%20on%20Raspberry%20Pi#Installation

  # sudo apt-get -y install ros-groovy-ros-comm \
  #  ros-groovy-rqt-gui ros-groovy-rqt-common-plugins \
  #  ros-groovy-roscpp-tutorials ros-groovy-turtlesim \
  #  ros-groovy-rosserial-arduino 


  sudo pip install -U rosdep rosinstall_generator wstool rosinstall
  sudo rosdep init
  rosdep update
  
  mkdir ~/ros_catkin_ws
  cd ~/ros_catkin_ws
  
  rosinstall_generator ros_comm --rosdistro indigo --deps --wet-only --exclude roslisp --tar > indigo-ros_comm-wet.rosinstall
  wstool init -j8 src indigo-ros_comm-wet.rosinstall
  # rosinstall_generator desktop --rosdistro indigo --deps --wet-only --exclude roslisp --tar > indigo-desktop-wet.rosinstall
  # wstool init -j8 src indigo-desktop-wet.rosinstall
  
  mkdir ~/ros_catkin_ws/external_src
  sudo apt-get install -y checkinstall cmake
  
  # libconsole-bridge-dev
  echo 'When check-install asks for any changes, the name (2) needs to change from'
  echo 'console-bridge" to "libconsole-bridge-dev" otherwise the rosdep install wont find it.'
  cd ~/ros_catkin_ws/external_src
  sudo apt-get install -y libboost-system-dev libboost-thread-dev
  git clone https://github.com/ros/console_bridge.git
  cd console_bridge
  cmake .
  sudo checkinstall make install 
  
  # liblz4-dev
  cd ~/ros_catkin_ws/external_src
  wget http://archive.raspbian.org/raspbian/pool/main/l/lz4/liblz4-1_0.0~r122-2_armhf.deb
  wget http://archive.raspbian.org/raspbian/pool/main/l/lz4/liblz4-dev_0.0~r122-2_armhf.deb
  sudo dpkg -i liblz4-1_0.0~r122-2_armhf.deb liblz4-dev_0.0~r122-2_armhf.deb

  # liburdfdom-headers-dev
  echo  'When check-install asks for any changes, the name (2) needs to change from'
  echo  '"urdfdom-headers" to "liburdfdom-headers-dev" otherwise the rosdep install wont find it.'
  cd ~/ros_catkin_ws/external_src
  git clone https://github.com/ros/urdfdom_headers.git
  cd urdfdom_headers
  cmake .
  sudo checkinstall make install
  
  # liburdfdom-dev
  echo 'When check-install asks for any changes, the name (2) needs to change from'
  echo '"urdfdom" to "liburdfdom-dev" otherwise the rosdep install wont find it.'
  cd ~/ros_catkin_ws/external_src
  sudo apt-get install libboost-test-dev libtinyxml-dev
  git clone https://github.com/ros/urdfdom.git
  cd urdfdom
  cmake .
  sudo checkinstall make install
  
  # collada-dom-dev
  echo 'When check-install asks for any changes, the name (2) needs to change from'
  echo '"collada-dom" to "collada-dom-dev" otherwise the rosdep install wont find it.'
  cd ~/ros_catkin_ws/external_src
  sudo apt-get install libboost-filesystem-dev libxml2-dev
  wget http://downloads.sourceforge.net/project/collada-dom/Collada%20DOM/Collada%20DOM%202.4/collada-dom-2.4.0.tgz
  tar -xzf collada-dom-2.4.0.tgz
  cd collada-dom-2.4.0
  cmake .
  sudo checkinstall make install
  
  cd ~/ros_catkin_ws
  rosdep install --from-paths src --ignore-src --rosdistro indigo -y -r --os=debian:wheezy
  sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/indigo
  
  echo '# Setup for ROS ' |sudo tee /etc/profile.d/ros.sh
  echo source /opt/ros/indigo/setup.bash |sudo tee -a  /etc/profile.d/ros.sh
else
  echo
fi

if [[ $(ask "Do you wish to install a Java Development Kit?[y/N] ") =~ ^[Yy]$ ]] ; then
  sudo apt-get -y install oracle-java8-jdk
else
  echo
fi


if [[ $(ask "Do you wish to install the Arduino Dev Tools (NB Will install JDK if needed)? [y/N] ") =~ ^[Yy]$ ]] ; then
  sudo apt-get -y install oracle-java8-jdk arduino arduino-mk libdevice-serialport-perl
  sudo pip install ino
else
  echo
fi

if [[ $(ask "Do you wish to install node.js (e.g. for NodeBot dev) (NB Will install JDK if needed)? [y/N] ") =~ ^[Yy]$ ]]
then
  sudo apt-get -y install oracle-java8-jdk minicom arduino arduino-mk libdevice-serialport-perl

  wget https://node-arm.herokuapp.com/node_latest_armhf.deb
  sudo dpkg -i node_latest_armhf.deb
  rm node_latest_armhf.deb

  if [[ $(ask "Do you wish to install firmata etc for Simplebot? [y/N] ") =~ ^[Yy]$ ]]
  then
     cd ~
     git clone https://github.com/nodebotsau/simplebot
     cd simplebot
     npm install
     cd firmware/ino/SBSFirmata
     ino build -m uno
     #ino upload -m uno -p /dev/ttyS99
     cd -
     node examples/simplebot.js /dev/ttyS99
     cd ~
  fi
fi

if [[ $(ask "Do you wish to install Go lang and gobot (e.g. for SimpleBot dev)? [y/N] ") =~ ^[Yy]$ ]]
then
  wget -O - http://dave.cheney.net/paste/go1.4.linux-arm~multiarch-armv6-1.tar.gz|sudo tar -xzC /usr/local -f -

  echo '# Setup for golang' |sudo tee /etc/profile.d/golang.sh
  echo 'PATH=$PATH:/usr/local/go/bin'|sudo tee -a /etc/profile.d/golang.sh

  source /etc/profile.d/golang.sh
  
  mkdir -p ~/gobot/{src,bin,pkg}
  export GOPATH=~/gobot
  cd $GOPATH
  go get -d -u github.com/hybridgroup/gobot/...
  go install github.com/hybridgroup/gobot/platforms/raspi
  go get -u github.com/hybridgroup/gobot/gobot
fi

# Remove anything out of date
sudo apt-get autoremove
# Save a few hundred Mb of disk space by removing downloaded deb archives
sudo apt-get clean

# Stop raspi-config from running on next reboot

[[ -e /etc/profile.d/raspi-config.sh ]] && sudo rm -f /etc/profile.d/raspi-config.sh

echo Please use sudo raspi-config to configure additional options and use sudo apt-get dist-upgrade on a regular basis
read -p "System will reboot in 5 seconds. Press any key to continue" -n 1 -r < /dev/tty

# nohup bash -c 'sleep 5; sudo shutdown -rF now'& # Force disk check
sleep5
sudo shutdown -rF now'
